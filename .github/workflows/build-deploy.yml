name: GitHub Actions Demo
on: [push]
jobs:
  # Explore-GitHub-Actions:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v2
  #     - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "🖥️ The workflow is now ready to test your code on the runner."
  #     - name: List files in the repository
  #       run: |
  #         ls ${{ github.workspace }}
  #     - run: echo "🍏 This job's status is ${{ job.status }}."


  My-Own-Job:
    environment:
      # Can be created in github under settings/envoronment
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: toortoor
      DATABASE_NAME: fastapi
      DATABASE_USERNAME: postgres
      SECRET_KEY: 017890236475869901937
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60

    # Postgresql Docker Container
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: toortoor
          POSTGRES_DB: fastapi_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository code
        uses: actions/checkout@v2
      - run: echo "Successfully checkout repo"
      - name: Automation Started
        run:  echo "Hello Everyone"
      - name: Install Python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      



# name: Build and Deploy code

# on: [push, pull_requests]

# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout or pulling the repo
#       #  From the market place search for checkout and you will get the below command
#         uses: actions/checkout@v2
#       - name: Automating the integration and deployment
#         run: echo "Automation Started"